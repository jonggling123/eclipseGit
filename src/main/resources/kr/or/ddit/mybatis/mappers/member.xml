<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.IMemberDAO">
	<sql id="searchFrag">
		<where>
             <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
             	<choose>
             		<when test='"mem_name".equals(searchType)'>
             			${searchType} LIKE '%'||#{searchWord}||'%'
             		</when>
             		<when test='"mem_add1".equals(searchType)'>
             			${searchType} LIKE '%'||#{searchWord}||'%'
             		</when>
             		<when test='"mem_hp".equals(searchType)'>
             			${searchType} LIKE '%'||#{searchWord}||'%'
             		</when>
             		<when test='"all".equals(searchType)'>
             			MEM_NAME LIKE '%'||#{searchWord}||'%' OR
             			MEM_ADD1 LIKE '%'||#{searchWord}||'%' OR
             			MEM_HP LIKE '%'||#{searchWord}||'%'
             		</when>
             	</choose>
             </if>
             </where>
	</sql>
	<select id="selectMemberCount" parameterType="PagingVO" resultType="long">
		SELECT COUNT(MEM_ID)
		FROM MEMBER
		<include refid="searchFrag" />
	</select>
	<select id="selectMemberList" resultType="memberVO" parameterType="PagingVO">
		 SELECT B.*
FROM(
    SELECT ROWNUM RNUM, A.*
             FROM
             (SELECT                                                 
                 MEM_ID,    MEM_PASS,    MEM_NAME,                     
                 MEM_REGNO1,    MEM_REGNO2,    MEM_BIR,                
                 MEM_ZIP,    MEM_ADD1,    MEM_ADD2,                    
                 MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,                
                 MEM_MAIL,    MEM_JOB,    MEM_LIKE,                    
                 MEM_MEMORIAL,    MEM_MEMORIALDAY,    MEM_MILEAGE,
                 MEM_DELETE, MEM_IMG
             FROM MEMBER M
             <include refid="searchFrag" />
             ORDER BY ROWID DESC
             ) A
    ) B
	     <![CDATA[
	     WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}         
		]]>
	</select>
	<resultMap type="memberVO" id="memberMap" autoMapping="true">
		<id property="mem_id" column="MEM_ID"/>
		<collection property="cartList" ofType="CartVO" autoMapping="true">
			<id property="cart_no" column="CART_NO"/>
			<id property="cart_prod" column="CART_PROD" />
			<collection property="prodList" ofType="ProdVO" autoMapping="true" />
		</collection>
	</resultMap>
	<select id="selectMember" resultMap="memberMap" parameterType="string">
		 SELECT                                                
		     MEM_ID,    MEM_PASS,    MEM_NAME,                 
		     MEM_REGNO1,    MEM_REGNO2,    TO_CHAR(MEM_BIR, 'YYYY-MM-DD') MEM_BIR,           
		     MEM_ZIP,    MEM_ADD1,    MEM_ADD2,                 
		     MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,             
		     MEM_MAIL,    MEM_JOB,    MEM_LIKE,                 
		     MEM_MEMORIAL,    TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY,    MEM_MILEAGE,  
		     MEM_DELETE, MEM_IMG
		     , CART_NO, CART_MEMBER, CART_PROD, CART_QTY
		     , PROD_ID, PROD_NAME, PROD_PRICE, PROD_MILEAGE, PROD_OUTLINE                                        
		 FROM    MEMBER LEFT OUTER JOIN CART ON (MEM_ID = CART_MEMBER)
				 		LEFT OUTER JOIN PROD ON (CART_PROD = PROD_ID) 
		 WHERE MEM_ID = #{noname}	
	</select>
	<update id="updateMember" parameterType="memberVO">
		UPDATE MEMBER         
	    SET                   
        MEM_ZIP	=	#{mem_zip},           
        MEM_ADD1	=	#{mem_add1},          
        MEM_ADD2	=	#{mem_add2},          
        MEM_HOMETEL	=	#{mem_hometel},       
        MEM_COMTEL	=	#{mem_comtel},        
        MEM_HP	=	#{mem_hp},            
        MEM_MAIL	=	#{mem_mail},          
        MEM_JOB	=	#{mem_job},           
        MEM_LIKE	=	#{mem_like},          
        MEM_MEMORIAL	=	#{mem_memorial},      
        MEM_MEMORIALDAY =TO_DATE(#{mem_memorialday}, 'YYYY-MM-DD')
        <if test="mem_img!=null and mem_img.length gt 0">
        , MEM_IMG = #{mem_img, jdbcType=BLOB}
        </if>   
		WHERE   MEM_ID	=	#{mem_id}      
	
	</update>
	<delete id="deleteMember" parameterType="string">
		UPDATE MEMBER
		SET MEM_DELETE = 'Y'
		WHERE MEM_ID = #{noname}
	</delete>
	<insert id="insertMember">
		 INSERT INTO MEMBER (                                     
		     MEM_ID,    MEM_PASS,    MEM_NAME,                    
		     MEM_REGNO1,    MEM_REGNO2,    MEM_BIR,               
		     MEM_ZIP,    MEM_ADD1,    MEM_ADD2,                   
		     MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,               
		     MEM_MAIL,    MEM_JOB,    MEM_LIKE,                   
		     MEM_MEMORIAL,    MEM_MEMORIALDAY,    MEM_MILEAGE,
		     MEM_IMG     
		 ) VALUES (                                               
		 	#{mem_id},    #{mem_pass},    #{mem_name},                    
		     #{mem_regno1},    #{mem_regno2},    TO_DATE(#{mem_bir}, 'YYYY-MM-DD'),               
		     #{mem_zip},    #{mem_add1},    #{mem_add2},                   
		     #{mem_hometel},    #{mem_comtel},    #{mem_hp},               
		     #{mem_mail},    #{mem_job},    #{mem_like},                   
		     #{mem_memorial},    TO_DATE(#{mem_memorialday}, 'YYYY-MM-DD'),    1000,
		     #{mem_img, jdbcType=BLOB}         
		 )  
	</insert>
</mapper>  























